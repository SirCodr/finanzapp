generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions", "multiSchema"]
  binaryTargets   = ["native"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model identities {
  id              String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([provider, id])
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_factors {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  friendly_name  String?
  factor_type    factor_type
  status         factor_status
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  secret         String?
  mfa_challenges mfa_challenges[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  from_ip_address String?       @db.Inet
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                 String?       @db.Uuid
  id                          String        @id @db.Uuid
  aud                         String?       @db.VarChar(255)
  role                        String?       @db.VarChar(255)
  email                       String?       @db.VarChar(255)
  encrypted_password          String?       @db.VarChar(255)
  email_confirmed_at          DateTime?     @db.Timestamptz(6)
  invited_at                  DateTime?     @db.Timestamptz(6)
  confirmation_token          String?       @db.VarChar(255)
  confirmation_sent_at        DateTime?     @db.Timestamptz(6)
  recovery_token              String?       @db.VarChar(255)
  recovery_sent_at            DateTime?     @db.Timestamptz(6)
  email_change_token_new      String?       @db.VarChar(255)
  email_change                String?       @db.VarChar(255)
  email_change_sent_at        DateTime?     @db.Timestamptz(6)
  last_sign_in_at             DateTime?     @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?     @db.Timestamptz(6)
  updated_at                  DateTime?     @db.Timestamptz(6)
  phone                       String?       @unique
  phone_confirmed_at          DateTime?     @db.Timestamptz(6)
  phone_change                String?       @default("")
  phone_change_token          String?       @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?     @db.Timestamptz(6)
  confirmed_at                DateTime?     @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?       @default("") @db.VarChar(255)
  email_change_confirm_status Int?          @default(0) @db.SmallInt
  banned_until                DateTime?     @db.Timestamptz(6)
  reauthentication_token      String?       @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?     @db.Timestamptz(6)
  is_sso_user                 Boolean       @default(false)
  deleted_at                  DateTime?     @db.Timestamptz(6)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  sessions                    sessions[]

  @@index([instance_id])
  @@map("users")
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_types {
  id                                                                   BigInt                       @id @default(autoincrement())
  original_name                                                        String
  user_id                                                              BigInt?
  created_at                                                           DateTime                     @default(now()) @db.Timestamptz(6)
  users                                                                public_users?                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  account_types_translations                                           account_types_translations[]
  transactions_transactions_destination_account_type_idToaccount_types transactions[]               @relation("transactions_destination_account_type_idToaccount_types")
  transactions_transactions_origin_account_type_idToaccount_types      transactions[]               @relation("transactions_origin_account_type_idToaccount_types")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_types_translations {
  id              BigInt        @id @default(autoincrement())
  language_id     BigInt
  name            String
  description     String?
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  account_type_id BigInt
  account_types   account_types @relation(fields: [account_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  languages       languages     @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model languages {
  id                                                                        BigInt                                   @id @default(autoincrement())
  original_name                                                             String
  code                                                                      String
  created_at                                                                DateTime                                 @default(now()) @db.Timestamptz(6)
  account_types_translations                                                account_types_translations[]
  languages_translations_languages_translations_from_language_idTolanguages languages_translations[]                 @relation("languages_translations_from_language_idTolanguages")
  languages_translations_languages_translations_to_language_idTolanguages   languages_translations[]                 @relation("languages_translations_to_language_idTolanguages")
  transaction_categories_translations                                       transaction_categories_translations[]
  transaction_subcategories_translations                                    transaction_subcategories_translations[]
  transaction_types_translations                                            transaction_types_translations[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model languages_translations {
  id                                                           BigInt    @id @default(autoincrement())
  from_language_id                                             BigInt
  name                                                         String
  created_at                                                   DateTime  @default(now()) @db.Timestamptz(6)
  to_language_id                                               BigInt
  languages_languages_translations_from_language_idTolanguages languages @relation("languages_translations_from_language_idTolanguages", fields: [from_language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  languages_languages_translations_to_language_idTolanguages   languages @relation("languages_translations_to_language_idTolanguages", fields: [to_language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_categories {
  id                                  BigInt                                @id @default(autoincrement())
  original_name                       String
  transaction_subcategory_id          BigInt?
  user_id                             BigInt?
  created_at                          DateTime                              @default(now()) @db.Timestamptz(6)
  transaction_subcategories           transaction_subcategories?            @relation(fields: [transaction_subcategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                               public_users?                         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_categories_translations transaction_categories_translations[]
  transactions                        transactions[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_categories_translations {
  id                      BigInt                 @id @default(autoincrement())
  language_id             BigInt
  name                    String
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  transaction_category_id BigInt
  languages               languages              @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_categories  transaction_categories @relation(fields: [transaction_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_categories_translations_transaction_category_id_fke")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_subcategories {
  id                                     BigInt                                   @id(map: "subcategory_transactions_pkey") @default(autoincrement())
  original_name                          String
  created_at                             DateTime                                 @default(now()) @db.Timestamptz(6)
  transaction_categories                 transaction_categories[]
  transaction_subcategories_translations transaction_subcategories_translations[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_subcategories_translations {
  id                         BigInt                    @id(map: "subcategory_transactions_translations_pkey") @default(autoincrement())
  language_id                BigInt
  name                       String
  created_at                 DateTime                  @default(now()) @db.Timestamptz(6)
  transaction_subcategory_id BigInt
  languages                  languages                 @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_subcategories  transaction_subcategories @relation(fields: [transaction_subcategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_subcategories_translations_transaction_subcategory_")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_types {
  id                             BigInt                           @id @default(autoincrement())
  original_name                  String
  created_at                     DateTime                         @default(now()) @db.Timestamptz(6)
  transaction_types_translations transaction_types_translations[]
  transactions                   transactions[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transaction_types_translations {
  id                  BigInt            @id @default(autoincrement())
  language_id         BigInt
  name                String
  created_at          DateTime          @default(now()) @db.Timestamptz(6)
  transaction_type_id BigInt
  languages           languages         @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_types   transaction_types @relation(fields: [transaction_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transactions {
  id                                                                    BigInt                 @id @default(autoincrement())
  transaction_type_id                                                   BigInt
  transaction_category_id                                               BigInt
  origin_account_type_id                                                BigInt
  destination_account_type_id                                           BigInt?
  user_id                                                               BigInt
  description                                                           String?
  amount                                                                String
  date                                                                  DateTime               @db.Date
  created_at                                                            DateTime               @default(now()) @db.Timestamptz(6)
  account_types_transactions_destination_account_type_idToaccount_types account_types?         @relation("transactions_destination_account_type_idToaccount_types", fields: [destination_account_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  account_types_transactions_origin_account_type_idToaccount_types      account_types          @relation("transactions_origin_account_type_idToaccount_types", fields: [origin_account_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_categories                                                transaction_categories @relation(fields: [transaction_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_types                                                     transaction_types      @relation(fields: [transaction_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                                                                 public_users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model public_users {
  id                     BigInt                   @id @default(autoincrement())
  created_at             DateTime                 @default(now()) @db.Timestamptz(6)
  account_types          account_types[]
  transaction_categories transaction_categories[]
  transactions           transactions[]

  @@map("users")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn

  @@schema("auth")
}
